# --------------- #
# Active profiles #
# --------------- #
#   profiles are used to customise platform operations in following areas
#   - container orchestrator (options: env_kubernetes)
#   - dcn setup (options: dcn_manual, dcn_none)
#   - database (options: db_memory, db_standalone)
spring.profiles.active=env_kubernetes, dcn_manual, db_standalone

# ---------------- #
# General settings #
# ---------------- #
server.port=${PLATFORM_PORT}
portal.address=${PORTAL_HOST}
admin.password=${ADMIN_PASSWORD}
admin.email=${ADMIN_EMAIL}

# REST API documentation
springdoc.api-docs.enabled=${PLATFORM_API_DOCS_ENABLED:false}
springdoc.api-docs.path=/api-docs/spec
springdoc.swagger-ui.enabled=${PLATFORM_API_DOCS_ENABLED:false}
springdoc.swagger-ui.path=/api-docs/ui.html

# Email
spring.mail.username=${SMTP_LOGIN}
spring.mail.password=${SMTP_PASSWORD}
spring.mail.host=${SMTP_HOST}
spring.mail.port=${SMTP_PORT}
spring.mail.properties.mail.smtp.auth=${USE_LOGIN_PASSWORD}
spring.mail.properties.mail.smtp.starttls.enable=${USE_STARTTLS}
spring.mail.properties.mail.smtp.starttls.required=${USE_STARTTLS}
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=3000
spring.mail.properties.mail.smtp.writetimeout=5000

# HTTP filter options
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true

# Prometheus metrics
nmaas.metrics.enabled=${METRICS_ENABLED}
management.endpoints.web.exposure.include=health,prometheus

# Notifications
notifications.from-address=${SMTP_FROM}

# ---------------- #
# Database         #
# ---------------- #
# Standalone PostgreSQL
db.standalone.jdbc-url=jdbc:postgresql://${POSTGRESQL_HOST}:5432/${POSTGRESQL_DBNAME}
db.standalone.username=${POSTGRESQL_USERNAME}
db.standalone.password=${POSTGRESQL_PASSWORD}
# FlywayDB settings
spring.flyway.enabled=true
spring.flyway.locations=classpath:/db/migration
spring.flyway.out-of-order=true

# Common
spring.jpa.properties.hibernate.show_sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.connection.autocommit=false
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration

# -------------------------------------------------------- #
# NMaaS application deployment and configuration processes #
# -------------------------------------------------------- #
nmaas.service.deployment.check.interval=${DEPLOYMENT_CHECK_INTERVAL}
nmaas.service.deployment.max.duration=${DEPLOYMENT_CHECK_TIMEOUT}
nmaas.service.upgrade.cron=${APP_UPGRADE_CRON}
nmaas.service.upgrade-summary.cron=${APP_UPGRADE_SUMMARY_CRON}
nmaas.service.upgrade-summary.interval=${APP_UPGRADE_SUMMARY_INTERVAL}

nmaas.portal.domains.codename.pattern=[a-z0-9-]{2,12}
nmaas.portal.domains.codename.length=12
nmaas.portal.modals.appinstall.pattern=[a-zA-Z0-9-]{3,10}
nmaas.portal.domains.namespace.pattern=[a-z0-9-]{0,64}

nmaas.platform.webhooks.baseurl=${PLATFORM_BASEURL}/api/gitlab/webhooks

# NMaaS Platform is running within the Kubernetes cluster
nmaas.kubernetes.incluster=true

# ------------------------------ #
# Quartz scheduler configuration #
# ------------------------------ #
spring.quartz.job-store-type=jdbc
spring.quartz.jdbc.initialize-schema=always
spring.quartz.properties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.PostgreSQLDelegate

# ----- #
# Other #
# ----- #
upload.dir=/nmaas/files/upload
jwt.tokenValidFor=3600000
jwt.refreshTokenValidFor=13600000
jwt.issuer=NMaaS
jwt.signingKey=${API_KEY}
jwt.resetSigningKey=testResetKey
jwt.resetTokenValidFor=1800000
captcha.secret=${CAPTCHA_SECRET}
spring.data.web.pageable.default-page-size=1000
management.info.git.mode=full
management.health.mail.enabled=false
spring.mvc.favicon.enabled=false
spring.devtools.add-properties=false

# ------------------------ #
# SAML proxy configuration #
# ------------------------ #
sso.loginUrl=${SSO_URL_LOGIN}
sso.logoutUrl=${SSO_URL_LOGOUT}
sso.timeout=${SSO_TIMEOUT}
sso.key=${SSO_KEY}

# ------------------ #
# Helm configuration #
# ------------------ #
helm.address=${HELM_ADDRESS}
helm.username=${HELM_USERNAME}
helm.useLocalCharts=${HELM_USELOCALCHARTS}
helm.repositoryName=${HELM_REPOSITORY}
helm.repositoryUrl=${HELM_REPOSITORY_URL}
helm.chartsDirectory=${HELM_LOCALCHARTSDIR}
helm.enableTls=${HELM_ENABLETLS}
helm.version=${HELM_VERSION}

# --------------------- #
# Janitor configuration #
# --------------------- #
janitor.address=${JANITOR_ADDRESS}
janitor.port=${JANITOR_PORT}

# -------------------- #
# GitLab configuration #
# -------------------- #
gitlab.address=${GITLAB_ADDRESS}
gitlab.port=${GITLAB_PORT}
gitlab.token=${GITLAB_TOKEN}

# ------------------------ #
# Kubernetes configuration #
# ------------------------ #
kubernetes.ingress.controllerConfigOption=USE_EXISTING
kubernetes.ingress.supportedIngressClass=${K8S_INGRESS_CONTROLLER_INGRESS_CLASS}
kubernetes.ingress.publicIngressClass=${K8S_INGRESS_CONTROLLER_PUBLIC_INGRESS_CLASS}
kubernetes.ingress.controllerChartName=
kubernetes.ingress.controllerChartArchive=
kubernetes.ingress.resourceConfigOption=DEPLOY_FROM_CHART
kubernetes.ingress.externalServiceDomain=${K8S_INGRESS_CONTROLLER_EXTERNAL_SERVICE_DOMAIN}
kubernetes.ingress.publicServiceDomain=${K8S_INGRESS_CONTROLLER_PUBLIC_SERVICE_DOMAIN}
kubernetes.ingress.tlsSupported=${K8S_INGRESS_CONTROLLER_TLS_SUPPORTED}
kubernetes.ingress.ingressPerDomain=${K8S_INGRESS_CONTROLLER_PER_DOMAIN}
kubernetes.ingress.certificateConfigOption=${K8S_INGRESS_CERTIFICATE_CONFIG_OPTION}
kubernetes.ingress.issuerOrWildcardName=${K8S_INGRESS_CERTIFICATE_ISSUER_OR_WILDCARD_NAME}
kubernetes.deployment.namespaceConfigOption=${K8S_DEPLOYMENT_NAMESPACE_CONFIG_OPTION}
kubernetes.deployment.defaultNamespace=${K8S_DEPLOYMENT_DEFAULT_NAMESPACE}
kubernetes.deployment.smtpServerHostname=${SMTP_HOST}
kubernetes.deployment.smtpServerPort=${SMTP_PORT}
kubernetes.deployment.smtpServerUsername=${SMTP_LOGIN}
kubernetes.deployment.smtpServerPassword=${SMTP_PASSWORD}
kubernetes.deployment.defaultStorageClass=${K8S_DEPLOYMENT_DEFAULT_STORAGE_CLASS}
kubernetes.deployment.forceDedicatedWorkers=false

# -------------------- #
# Portal configuration #
# -------------------- #
portal.config.maintenance=${PORTAL_MAINTENANCE_FLAG}
portal.config.ssoLoginAllowed=${PORTAL_SSO_ALLOWED_FLAG}
portal.config.defaultLanguage=${PORTAL_DEFAULT_LANG}
portal.config.testInstance=${PORTAL_TEST_INSTANCE_FLAG}
portal.config.sendAppInstanceFailureEmails=${PORTAL_SEND_FAILURE_NOTIF_FLAG}
portal.config.showDomainRegistrationSelector=${PORTAL_DOMAIN_REGISTRATION_SELECTOR}
# string - list of emails with ':' as a separator, e.g. admin1@nmaas.eu;admin2@nmaas.eu
portal.config.appInstanceFailureEmailList=${ADMIN_EMAIL}
